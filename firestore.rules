rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check user roles from their profile
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Public access for vehicles
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can modify
    }
    
    // User can read/update their own profile.
    // Admins/Supervisors can list users for management purposes.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || getUserRole(request.auth.uid) in ['Admin', 'Supervisor']);
      allow update: if request.auth != null && request.auth.uid == userId;
      // Create and delete should be handled by secure backend functions.
      allow create, delete: if getUserRole(request.auth.uid) == 'Admin';
    }
    
    // Only Admins and Supervisors can read activity logs
    match /activityLogs/{logId} {
      allow read: if request.auth != null && getUserRole(request.auth.uid) in ['Admin', 'Supervisor'];
      allow create: if request.auth != null; // Any authenticated user can trigger a log
      allow update, delete: if false; // Logs should be immutable
    }

    // Only Admins and Supervisors can manage expenses
    match /expenses/{expenseId} {
        allow read, write: if request.auth != null && getUserRole(request.auth.uid) in ['Admin', 'Supervisor'];
    }

    // Contracts can only be read by admins/supervisors. Can be created by anyone (during booking)
    match /contracts/{contractId} {
        allow read: if request.auth != null && getUserRole(request.auth.uid) in ['Admin', 'Supervisor', 'Secretary'];
        allow write: if request.auth != null;
    }

    // All other business-critical collections require authentication
    // and specific roles for access.
    match /{document=**} {
      allow read, write: if request.auth != null && getUserRole(request.auth.uid) in ['Admin', 'Supervisor', 'Secretary'];
    }
  }
}
