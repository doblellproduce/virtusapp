
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for staff roles
    function isStaff() {
      let role = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return role in ['Admin', 'Supervisor', 'Secretary'];
    }
    
    // Helper function to check for admin/supervisor roles
    function isAdminOrSupervisor() {
      let role = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return role in ['Admin', 'Supervisor'];
    }

    // Users: Can create their own profile on signup. Can read/update their own profile. Admins can manage all.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdminOrSupervisor();
      allow create: if request.auth.uid == userId || isAdminOrSupervisor(); // Allow user creation on signup
      allow delete: if isAdminOrSupervisor();
    }
    
    // Customers: Mirrored from user profiles for this app's logic.
    match /customers/{customerId} {
      allow read, update, delete: if isAdminOrSupervisor();
      allow create: if request.auth.uid != null;
    }

    // Vehicles: Public can read. Admin/Supervisor can manage.
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow create, update, delete: if isAdminOrSupervisor();
    }
    
    // Reservations: Authenticated can create. Staff can read all. Users can only read/update their own.
    match /reservations/{reservationId} {
      allow create: if request.auth.uid != null;
      allow read: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      allow update: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      allow delete: if isAdminOrSupervisor();
    }
    
    // Invoices: Admin/Supervisor only for now.
    match /invoices/{invoiceId} {
        allow read, create, update, delete: if isAdminOrSupervisor();
    }

    // Maintenance & Expenses: Managed by Admin/Supervisor
    match /maintenanceLogs/{logId} {
       allow read, create, update, delete: if isAdminOrSupervisor();
    }
    
    match /expenses/{expenseId} {
       allow read, create, update, delete: if isAdminOrSupervisor();
    }
    
    // Reviews: Public read. Any authenticated user can create. Admin/Supervisor can moderate.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update, delete: if isAdminOrSupervisor();
    }

    // Documents and Contracts: Managed by Admin/Supervisor. Users can read their own contracts.
     match /documents/{documentId} {
        allow read, create, update, delete: if isAdminOrSupervisor();
    }
    
    match /contracts/{contractId} {
        allow read: if isAdminOrSupervisor() || get(/databases/$(database)/documents/contracts/$(contractId)).data.customerId == request.auth.uid;
        allow create, update, delete: if isAdminOrSupervisor();
    }

    // Activity Logs: Any authenticated user can create (log their own actions). Admins can read all.
    match /activityLogs/{logId} {
      allow read: if isAdminOrSupervisor();
      allow create: if request.auth.uid != null;
    }
  }
}
