
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función para obtener el rol del usuario desde la colección 'users'
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Los usuarios pueden leer su propio perfil
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      // Solo los Admins pueden crear, actualizar o borrar usuarios
      allow write: if request.auth != null && getUserRole(request.auth.uid) == 'Admin';
    }

    // Cualquier usuario autenticado (empleado) puede leer la lista de vehículos
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      // Solo Admins o Supervisores pueden crear/actualizar/borrar vehículos
      allow write: if request.auth != null && (getUserRole(request.auth.uid) == 'Admin' || getUserRole(request.auth.uid) == 'Supervisor');
    }
    
    // Cualquier usuario autenticado puede leer/escribir en estas colecciones
    // Esto es un punto de partida. Se puede restringir más si es necesario.
    match /reservations/{reservationId} {
      allow read, write: if request.auth != null;
    }

    match /invoices/{invoiceId} {
      allow read, write: if request.auth != null;
    }
    
    match /maintenanceLogs/{logId} {
      allow read, write: if request.auth != null;
    }
    
    // Acceso de solo lectura para datos públicos/compartidos como los gastos
    match /expenses/{expenseId} {
        allow read, write: if request.auth != null;
    }
  }
}
