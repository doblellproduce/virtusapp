rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor'];
    }
    
    function isStaff() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor', 'Secretary'];
    }

    // --- Collections Rules ---
    
    // Users: Admins/Supervisors manage all. Users can only read/edit their own profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create, delete: if isAdmin();
    }
    
    // Customers: Created by system/admins. Linked to a user auth.
    match /customers/{customerId} {
      allow read, update, delete: if isAdmin();
      // Customer profiles are created server-side or by admins, not directly by clients.
      allow create: if isAuth(); 
    }

    // Vehicles: Public can read, Admins/Supervisors can manage.
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Reservations: 
    // Any authenticated user can create.
    // Staff can read all. Owners can read/update their own. Admins can delete.
    match /reservations/{reservationId} {
      allow create: if isAuth();
      allow list, read: if isStaff() || getAfter(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      allow update: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      allow delete: if isAdmin();
    }
    
    // Reviews: Public read. Any authenticated user can create. Admins manage.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuth();
      allow update, delete: if isAdmin();
    }

    // Invoices: Only staff can manage.
    match /invoices/{invoiceId} {
        allow read, create, update, delete: if isStaff();
    }
    
    // Documents: Users can manage their own, staff can manage all.
    match /documents/{docId} {
      allow read: if isStaff() || get(/databases/$(database)/documents/documents/$(docId)).data.customerId == request.auth.uid;
      allow create: if isAuth();
      allow update, delete: if isStaff();
    }
    
    // Contracts: Admin/Supervisor only.
    match /contracts/{contractId} {
        allow read, create, update, delete: if isAdmin();
    }
    
    // Maintenance & Expenses: Staff only.
    match /maintenanceLogs/{logId} {
       allow read, create, update, delete: if isStaff();
    }
    
    match /expenses/{expenseId} {
       allow read, create, update, delete: if isStaff();
    }
    
    // Activity Logs: Admin/Supervisor only for read, any authenticated can trigger a write via server-side logic.
    match /activityLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuth();
    }
  }
}
