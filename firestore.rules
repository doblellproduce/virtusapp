rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isStaff() {
      return request.auth.token.role in ['Admin', 'Supervisor', 'Secretary'];
    }
    
    // --- Public read, Staff write ---
    match /vehicles/{vehicleId} {
      allow get, list: if true;
      allow write, create, delete: if isStaff();
    }

    match /reviews/{reviewId} {
        allow list, create: if request.auth != null;
        allow get: if true;
        allow update, delete: if isStaff();
    }
    
    // --- Staff only access ---
    match /customers/{customerId} {
      allow read, write, create, delete: if isStaff();
    }
    
    match /reservations/{reservationId} {
      allow read, write, create, delete: if isStaff();
    }

    match /invoices/{invoiceId} {
        allow read, write, create, delete: if isStaff();
    }

    match /expenses/{expenseId} {
        allow read, write, create, delete: if isStaff();
    }
    
    match /maintenanceLogs/{logId} {
        allow read, write, create, delete: if isStaff();
    }
    
    match /documents/{documentId} {
        allow read, write, create, delete: if isStaff();
    }

    match /contracts/{contractId} {
        allow read, write, create, delete: if isStaff();
    }

    // --- Admins only ---
    match /users/{userId} {
        allow read, write, delete: if request.auth.token.role == 'Admin';
        allow create: if request.auth.token.role == 'Admin';
    }

    match /activityLogs/{logId} {
      allow read: if request.auth.token.role in ['Admin', 'Supervisor'];
      allow create: if request.auth != null;
    }
    
     // --- Client-specific rules ---
    match /users/{uid} {
      // Allow clients to read their own user profile
      allow get: if request.auth != null && request.auth.uid == uid;
    }

  }
}
