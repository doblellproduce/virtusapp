rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isStaff() {
      // Allows access for any employee role.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor', 'Secretary'];
    }

    function isAdmin() {
      // More restrictive, only for top-level management.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor'];
    }
    
    function isOwner(resourceId) {
      // Checks if the requesting user is the owner of the resource.
      return request.auth.uid == resourceId;
    }

    // --- Collection Rules ---

    // USERS: Users can see/edit their own profile. Admins can manage all. Any authenticated user can create their own profile (on signup).
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth.uid != null; // Allows new user registration
      allow delete: if isAdmin();
    }
    
    // CUSTOMERS: Managed entirely by staff through the admin panel.
    match /customers/{customerId} {
      allow read, create, update, delete: if isStaff();
    }

    // VEHICLES: Public can read. Staff can manage.
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow create, update, delete: if isStaff();
    }
    
    // REVIEWS: Public can read. Any authenticated user can create. Admins can moderate.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update, delete: if isAdmin();
    }
    
    // RESERVATIONS:
    // Staff can see all reservations to manage them.
    // A user can create their own reservation.
    // A user can read/update their own reservation.
    match /reservations/{reservationId} {
      allow create: if request.auth.uid != null;
      allow read, update: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      allow delete: if isStaff();
    }
    
    // INVOICES & EXPENSES & MAINTENANCE: Staff only.
    match /invoices/{invoiceId} {
        allow read, create, update, delete: if isStaff();
    }
    
    match /expenses/{expenseId} {
       allow read, create, update, delete: if isStaff();
    }

    match /maintenanceLogs/{logId} {
       allow read, create, update, delete: if isStaff();
    }

    // DOCUMENTS & CONTRACTS: Staff only for management.
    match /documents/{docId} {
        allow read, create, update, delete: if isStaff();
    }
    
    match /contracts/{contractId} {
        allow read, create, update, delete: if isStaff();
    }

    // ACTIVITY LOGS: Any authenticated user can write to the log, but only staff can read it.
    match /activityLogs/{logId} {
      allow read: if isStaff();
      allow create: if request.auth.uid != null;
    }
  }
}
