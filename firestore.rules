rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTIONS ---
    // Checks if the user is a staff member (Admin, Supervisor, or Secretary)
    function isStaff() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor', 'Secretary'];
    }
    
    // Checks if the user is a top-level Admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // --- COLLECTION RULES ---

    // USERS: Staff can manage. Users can manage their own profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isStaff();
      // Admins can create new staff users from the panel. Client registration is handled via the customer profile.
      allow create, delete: if isAdmin();
    }
    
    // CUSTOMERS: Clients create their own profile on registration. Staff can manage.
    match /customers/{customerId} {
      allow read, update, delete: if isStaff();
      // Allows creation during the registration flow for any authenticated user
      allow create: if request.auth.uid != null;
    }

    // VEHICLES: Public read, staff write access.
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow create, update, delete: if isStaff();
    }

    // RESERVATIONS: Staff manage all. Clients manage their own.
    match /reservations/{reservationId} {
      // Allow creation if the user is authenticated and is creating the reservation for themselves.
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.customerId;
      
      // Allow staff to read/update all. Clients can only read/update their own.
      allow read, update: if isStaff() || resource.data.customerId == request.auth.uid;
      
      // Only staff can delete, preventing accidental client deletions.
      allow delete: if isStaff();
    }
    
    // INVOICES & EXPENSES: Full access for staff.
    match /invoices/{invoiceId} {
       allow read, create, update, delete: if isStaff();
    }
    match /expenses/{expenseId} {
       allow read, create, update, delete: if isStaff();
    }

    // REVIEWS: Public read. Write for authenticated users. Management for staff.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.customerId;
      allow update, delete: if isStaff();
    }

    // MAINTENANCE, CONTRACTS, ACTIVITY LOGS: Staff management.
    match /maintenanceLogs/{logId} {
       allow read, create, update, delete: if isStaff();
    }
    match /contracts/{contractId} {
        allow read, create, update, delete: if isStaff();
    }
    match /activityLogs/{logId} {
      allow read: if isStaff();
      // Allow any authenticated user to trigger a log write, as the backend function validates the content.
      allow create: if request.auth.uid != null;
    }
  }
}