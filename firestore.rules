
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to check for roles
    function isStaff() {
      // Allows Admin, Supervisor, or Secretary
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor', 'Secretary'];
    }

    function isAdmin() {
      // Only Admin or Supervisor
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor'];
    }

    // Users collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (on signup)
      allow create: if request.auth.uid == userId;
      // Users can read/update their own profile. Staff can read any profile.
      allow read, update: if request.auth.uid == userId || isStaff();
      // Only Admins can delete users
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Customers collection
    match /customers/{customerId} {
      // Any authenticated user can create a customer profile (themselves)
      allow create: if request.auth.uid != null;
      // Only staff can manage all customer profiles
      allow read, update, delete: if isStaff();
    }
    
    // Vehicles collection
    match /vehicles/{vehicleId} {
      // Anyone can read the vehicle list (for the public-facing site)
      allow read: if true;
      // Only Admins or Supervisors can manage vehicles
      allow create, update, delete: if isAdmin();
    }

    // Reservations collection
    match /reservations/{reservationId} {
      // Any authenticated user can create a reservation for themselves
      allow create: if request.auth.uid != null && request.resource.data.customerId == request.auth.uid;
      // Staff can read all reservations. Clients can only read their own.
      allow read: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      // Staff can update any reservation. Clients can update their own (e.g., to cancel).
      allow update: if isStaff() || get(/databases/$(database)/documents/reservations/$(reservationId)).data.customerId == request.auth.uid;
      // Only Admins or Supervisors can delete reservations
      allow delete: if isAdmin();
    }

    // Invoices collection
    match /invoices/{invoiceId} {
      // Only Staff can manage invoices
      allow read, create, update, delete: if isStaff();
    }
    
    // Expenses and Maintenance Logs
    match /expenses/{expenseId} {
       // Only Staff can manage expenses
       allow read, create, update, delete: if isStaff();
    }
    
    match /maintenanceLogs/{logId} {
       // Only Staff can manage maintenance
       allow read, create, update, delete: if isStaff();
    }

    // Documents and Contracts
    match /documents/{documentId} {
       // Authenticated users can upload for themselves, Staff can manage all
       allow create: if request.auth.uid != null;
       allow read, delete: if isStaff();
    }
    
    match /contracts/{contractId} {
        // Only Staff can manage contracts
        allow read, create, update, delete: if isStaff();
    }

    // Reviews
    match /reviews/{reviewId} {
      // Publicly readable once approved
      allow read: if resource.data.status == 'Approved' || isStaff();
      // Any authenticated user can create a review for their own reservation
      allow create: if request.auth.uid != null;
      // Only Admins/Supervisors can approve/reject/delete reviews
      allow update, delete: if isAdmin();
    }

    // Activity Logs
    match /activityLogs/{logId} {
      // Any authenticated user can write to the log (for their own actions)
      // Only Admins/Supervisors can read the full log
      allow create: if request.auth.uid != null;
      allow read: if isAdmin();
    }
  }
}
    