rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check for admin roles
    function isAdmin() {
      return exists(/databases/(default)/documents/users/$(request.auth.uid)) && 
             get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor'];
    }

    // Vehicle Images: Public can read, Admins can write/delete.
    match /vehicles/{fileName} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }
    
    // Inspection Photos: Only authenticated users can upload to their own reservation folders. Admins can read/delete.
    match /inspections/{reservationId}/{photoName} {
        allow read: if isAdmin();
        allow write: if request.auth != null; // Simplification: any auth user can write. More secure would check reservation ownership.
    }
    
    // Signature Photos: Similar to inspections.
    match /signatures/{reservationId}/{signatureName} {
         allow read: if isAdmin();
         allow write: if request.auth != null;
    }
    
    // Customer Documents: Only admins can manage these.
     match /documents/{fileName} {
      allow read, write, delete: if isAdmin();
    }
    
  }
}
