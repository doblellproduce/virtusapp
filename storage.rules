rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function for staff roles
    function isStaff() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Supervisor', 'Secretary'];
    }

    // Vehicle images: Publicly readable, only staff can write/delete.
    match /vehicles/{fileName} {
      allow read: if true;
      allow write: if isStaff();
    }

    // Inspection photos: Only authenticated users can write. Only staff can read them later.
    // The path is structured like: inspections/{reservationId}/{inspectionType}/{photoName}
    match /inspections/{reservationId}/{inspectionType}/{fileName} {
      allow read: if isStaff();
      // Allow write if the user is creating a reservation for themselves, or if they are staff.
      allow write: if request.auth.uid != null;
    }
    
    // Signatures: Same logic as inspection photos.
    match /signatures/{reservationId}/{inspectionType}/{fileName} {
       allow read: if isStaff();
       allow write: if request.auth.uid != null;
    }

    // General documents: Only staff can manage.
    match /documents/{fileName} {
        allow read, write: if isStaff();
    }
  }
}
